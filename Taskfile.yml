version: '3'

env:
  BIN_DIR: cmd/gophermart
  BIN_NAME: main
  BIN_PATH: "{{.BIN_DIR}}/{{.BIN_NAME}}"

dotenv: [ ".env", ]

tasks:
  # BASE TASKS
  lint:
    desc: "Run linter"
    run: once
    cmds:
      - golangci-lint run -D errcheck
      - go vet -vettool=`which statictest` ./...

  build:
    desc: "Build bin files"
    deps: [ lint, ]
    cmd: go build -v -o "{{.BIN_PATH}}" "{{.BIN_DIR}}/main.go"

  run:
    desc: "Run server"
    deps: [ build, ]
    cmd: "./{{.BIN_PATH}} -d {{.DB_URI}} -l debug"

  coverage:
    desc: "Get test coverage"
    cmd: go test -cover ./internal/...

  test:
    desc: "Run tests"
    deps: [ lint, ]
    cmd: go test -count 1 ./internal/...

  final-test:
    desc: "Run final test from CI/CD"
    deps: [ test, build, ]
    cmds:
      - |
        ./gophermarttest \
        -test.v \
        -test.run=^TestGophermart$ \
        -gophermart-binary-path={{.BIN_PATH}} \
        -gophermart-host=localhost \
        -gophermart-port=8000 \
        -gophermart-database-uri={{.DATABASE_URI}} \
        -accrual-binary-path=cmd/accrual/accrual_darwin_arm64 \
        -accrual-host=localhost \
        -accrual-port=$(random-practicum unused-port) \
        -accrual-database-uri={{.DATABASE_URI}}

  # DATABASE
  db-migrate:
    desc: "Run migrations"
    cmd: migrate -database ${DATABASE_URI} -path migrations up

  db-reset:
    desc: "Reset database (drop + create + migrate)"
    cmd: migrate -database ${DATABASE_URI} -path migrations down -all